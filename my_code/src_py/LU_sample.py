'''
Description: 
Author: Bohan Wang
Date: 2024-05-08 15:42:33
LastEditTime: 2024-05-08 15:54:11
LastEditors:  
'''
import numpy as np

# 给定的稀疏矩阵 A
A = np.array([
    [1, 0, 0, 0],
    [2, 3, 0, 0],
    [0, 4, 5, 0],
    [0, 0, 6, 7]
], dtype=float)

# 初始化 L 和 U 矩阵
L = np.eye(4)  # 单位下三角矩阵
U = np.zeros((4, 4))  # 上三角矩阵

# LU 分解过程
# 第一列
U[0, 0] = A[0, 0]  # u11 = a11
L[1, 0] = A[1, 0] / U[0, 0]  # l21 = a21 / u11
L[2, 0] = A[2, 0] / U[0, 0]  # l31 = a31 / u11
L[3, 0] = A[3, 0] / U[0, 0]  # l41 = a41 / u11

# 第二列
U[0, 1] = A[0, 1]  # u12 = a12
U[1, 1] = A[1, 1] - L[1, 0] * U[0, 1]  # u22 = a22 - l21 * u12
L[2, 1] = (A[2, 1] - L[2, 0] * U[0, 1]) / U[1, 1]  # l32 = (a32 - l31 * u12) / u22
L[3, 1] = (A[3, 1] - L[3, 0] * U[0, 1]) / U[1, 1]  # l42 = (a42 - l41 * u12) / u22

# 第三列
U[0, 2] = A[0, 2]  # u13 = a13
U[1, 2] = A[1, 2]  # u23 = a23
U[2, 2] = A[2, 2] - L[2, 0] * U[0, 2] - L[2, 1] * U[1, 2]  # u33 = a33 - l31 * u13 - l32 * u23
L[3, 2] = (A[3, 2] - L[3, 0] * U[0, 2] - L[3, 1] * U[1, 2]) / U[2, 2]  # l43 = (a43 - l41 * u13 - l42 * u23) / u33

# 第四列
U[0, 3] = A[0, 3]  # u14 = a14
U[1, 3] = A[1, 3]  # u24 = a24
U[2, 3] = A[2, 3]  # u34 = a34
U[3, 3] = A[3, 3] - L[3, 0] * U[0, 3] - L[3, 1] * U[1, 3] - L[3, 2] * U[2, 3]  # u44 = a44 - l41 * u14 - l42 * u24 - l43 * u34

# 打印输出 LU 分解结果
print("L 矩阵：")
print(L)

print("\nU 矩阵：")
print(U)

# 计算 L 和 U 的乘积
LU_product = np.dot(L, U)

# 打印输出 LU 的乘积结果
print("LU 矩阵的乘积：")
print(LU_product)
